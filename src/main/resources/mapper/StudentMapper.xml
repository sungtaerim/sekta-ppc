<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sekta.ppc.dao.mapper.StudentMapper">

    <resultMap id="studentEntity" type="com.sekta.ppc.dao.entity.Student">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="lastUpdate" column="last_update"/>
        <result property="lastMessage" column="last_message"/>
        <association property="user" resultMap="userEntity"/>
    </resultMap>

    <resultMap id="userEntity" type="com.sekta.ppc.dao.entity.User">
        <id property="id" column="id"/>
        <result property="ppcLogin" column="ppc_login"/>
        <result property="ppcPassword" column="ppc_password"/>
        <result property="ppcToken" column="ppc_token"/>
        <result property="state" column="state"
                typeHandler="com.sekta.ppc.dao.handler.BotStateHandler"/>
    </resultMap>

    <sql id="select">
        select *
        from student
        join users on student.user_id = users.id
    </sql>

    <select id="selectById" resultMap="studentEntity">
        <include refid="select"/>
        where student.id = #{id}
    </select>

    <select id="selectAllByUser" resultMap="studentEntity">
        <include refid="select"/>
        where users.id = #{userId}
    </select>

    <select id="existByName" resultType="java.lang.Boolean">
        select exists(select 1 from student where name = #{name})
    </select>

    <update id="updateLastTime">
        update student
        set last_update = current_timestamp
        where id = #{id}
    </update>

    <update id="updateLastMessage">
        update student
        set last_message = #{lastMessage}
        where id = #{id}
    </update>

    <insert id="insert">
        insert into student (name, user_id)
        values (#{name}, #{user.id})
    </insert>

    <delete id="deleteByName">
        delete from student
        where name = #{name}
    </delete>

    <delete id="deleteAllByUserId">
        delete from student
        where user_id = #{userId}
    </delete>

</mapper>
